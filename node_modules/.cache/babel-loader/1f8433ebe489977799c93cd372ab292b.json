{"ast":null,"code":"var _jsxFileName = \"/home/david_mugambi/Documents/Luxury-hotel/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state;\n      // for all the rooms\n      let tempRooms = [...rooms];\n\n      //transform value\n      capacity = parseInt(capacity);\n      price = parseInt(price);\n\n      //filter by type\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      }\n      //filter by capacity\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      }\n      //filter by price\n      tempRooms = tempRooms.filter(room => room.price <= price);\n\n      //filter by size\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize);\n\n      //filter by breakfast\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      }\n      //filter by pets\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      }\n      //change state\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = {\n        ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: {\n        ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"names":["React","Component","items","RoomContext","createContext","RoomProvider","constructor","args","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","parseInt","filter","size","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper","Object","assign","context"],"sources":["/home/david_mugambi/Documents/Luxury-hotel/src/context.js"],"sourcesContent":["import React, { Component } from 'react'\nimport items from './data';\nconst RoomContext = React.createContext();\n\n\nexport default class RoomProvider extends Component {\n    state={\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        type: 'all',\n        capacity: 1,\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false\n    };\n    componentDidMount(){\n        let rooms = this.formatData(items);\n        let featuredRooms = rooms.filter(room => room.featured === true);\n        let maxPrice = Math.max(...rooms.map(item => item.price));\n        let maxSize = Math.max(...rooms.map(item => item.size));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms:rooms,\n            loading: false,\n            price : maxPrice,\n            maxPrice,\n            maxSize\n        })\n    }\n    formatData(items){\n        let tempItems = items.map(item =>{\n        let id = item.sys.id;\n        let images = item.fields.images.map(image => image.fields.file.url);\n        let room = {...item.fields,images,id}\n        return room;    \n        });\n        return tempItems;\n    }\n    getRoom = (slug) => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find((room)=>room.slug === slug);\n        return room;\n    }\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type ==='checkbox' ? target.checked:target.value;\n        const name = event.target.name;\n        this.setState(\n        {\n            [name]: value\n        },this.filterRooms)\n    }\n    filterRooms = () => {\n        let{\n            rooms,type,capacity,price,minSize,maxSize,breakfast,pets\n        }= this.state\n        // for all the rooms\n        let tempRooms = [...rooms];\n\n        //transform value\n        capacity = parseInt(capacity)\n        price = parseInt(price)\n\n        //filter by type\n        if(type !=='all'){\n            tempRooms = tempRooms.filter(room => room.type === type)\n        }\n        //filter by capacity\n        if(capacity !==1){\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n        }\n        //filter by price\n        tempRooms = tempRooms.filter(room => room.price <= price);\n        \n        //filter by size\n        tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize)\n\n        //filter by breakfast\n        if(breakfast){\n            tempRooms = tempRooms.filter(room => room.breakfast === true)\n        }\n        //filter by pets\n        if(pets){\n            tempRooms = tempRooms.filter(room => room.pets === true)\n        }\n        //change state\n        this.setState({\n            sortedRooms: tempRooms\n        })\n    }\n    render() {\n        return (\n            <RoomContext.Provider value={{ ...this.state, getRoom: this.getRoom ,handleChange: this.handleChange }}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component){\n    return function ConsumerWrapper(props){\n        return <RoomConsumer>\n            {value => <Component {...props} context={value} />}\n        </RoomConsumer>\n    }\n}\n\nexport{RoomProvider,RoomConsumer,RoomContext}\n     "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}